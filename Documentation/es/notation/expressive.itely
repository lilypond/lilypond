@c -*- coding: utf-8; mode: texinfo; documentlanguage: es -*-
@ignore
    Translation of GIT committish: b22569ea33c9c9a6a26e17624d79449bffa81b22

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  For details, see the Contributors'
    Guide, node Updating translation committishes..
@end ignore

@c \version "2.19.21"

@node Expressive marks
@chapter Expresiones

@lilypondfile[quote]{snippets/expressive-headword.ly}

Esta sección relaciona diversas marcas de expresión que se pueden
crear en un a partitura.


@node Expressive marks attached to notes
@section Expresiones adosadas a las notas

Esta sección explica cómo crear marcas expresivas que están
aplicadas a notas: articulaciones, ornamentos y matices.  También
se tratan los métodos para crear las nuevas marcas dinámicas.


@node Articulations and ornamentations
@subsection Articulaciones y ornamentos


@cindex @q{abierta}, articulación
@cindex @q{acento}, articulación
@cindex @q{acro arriba}, indicación de arco
@cindex @q{coda de variante}, signo
@cindex @q{coda}, signo
@cindex @q{down pralltriller}, ornamento
@cindex @q{down-bow}, indicación de arco
@cindex @q{espressivo}, articulación
@cindex @q{flageolet}, armónicos
@cindex @q{grupeto circular barrado}, ornamento
@cindex @q{grupeto circular invertido}, ornamento
@cindex @q{grupeto circular}, ornamento
@cindex @q{grupeto de Haydn}, ornamento
@cindex @q{marcato}, articulación
@cindex @q{mordente ascendente}, ornamento
@cindex @q{mordente descendente}, ornamento
@cindex @q{mordente}, ornamento
@cindex @q{nota tapada}, articulación
@cindex @q{portato}, articulación
@cindex @q{pralltriller, ascendente}, ornamento
@cindex @q{pralltriller, descendente}, ornamento
@cindex @q{pralltriller, largo}, ornamento
@cindex @q{pralltriller}, ornamento
@cindex @q{pulgar}, digitación
@cindex @q{punta}, marca de pedal
@cindex @q{segno}, signo
@cindex @q{semi abierta}, articulación
@cindex @q{semitrino ascendente}, ornamento
@cindex @q{semitrino}, ornamento
@cindex @q{signum congruentiae}, ornamento
@cindex @q{snappizzicato}, sign
@cindex @q{staccatissimo}, articulación
@cindex @q{staccato}, articulación
@cindex @q{talón}, marca de pedal
@cindex @q{tenuto}, articulación
@cindex Henze, calderón de
@cindex abierto, high hat
@cindex arco abajo
@cindex arco arriba
@cindex armónico, flageolet
@cindex articulación
@cindex articulación, abierta
@cindex articulación, acento
@cindex articulación, espressivo
@cindex articulación, marcato
@cindex articulación, nota tapada
@cindex articulación, portato
@cindex articulación, semiabierta
@cindex articulación, staccatissimo
@cindex articulación, staccato
@cindex articulación, tenuto
@cindex calderón
@cindex calderón corto
@cindex calderón de Henze
@cindex calderón largo
@cindex coda
@cindex coda de variante
@cindex coda de variante, símbolo
@cindex corto, calderón
@cindex digitación de pulgar
@cindex espressivo
@cindex fermata o calderón
@cindex flageolet
@cindex grupeto
@cindex guión
@cindex high hat, abierto
@cindex high hat, pedal
@cindex high hat, semi abierto
@cindex indicación de pedal
@cindex indicación de pedalero de órgano
@cindex indicación de pulgar
@cindex largo, calderón
@cindex mordente
@cindex mordente, ascendente
@cindex mordente, circular
@cindex mordente, circular, cruzado
@cindex mordente, circular, de Haydn
@cindex mordente, circular, inverso
@cindex mordente, descendente
@cindex nota, abierta
@cindex nota, tapada
@cindex ornamentación
@cindex ornamento
@cindex ornamento, grupeto circular
@cindex ornamento, grupeto circular barrado
@cindex ornamento, grupeto circular de Haydn
@cindex ornamento, grupeto circular invertido
@cindex ornamento, mordente
@cindex ornamento, mordente, ascendente
@cindex ornamento, mordente, descendente
@cindex ornamento, semitrino
@cindex ornamento, semitrino, ascendente
@cindex ornamento, semitrino, descendente
@cindex ornamento, semitrino, descendente
@cindex ornamento, semitrino, largo
@cindex ornamento, signum congruentiae
@cindex ornamento, trino
@cindex pedal de órgano
@cindex pedal, high hat
@cindex pedal, indicación, punta
@cindex pedal, indicación, talón
@cindex pedal, indicación, órgano
@cindex pie, indicación de
@cindex segno
@cindex semi abierto, high hat
@cindex semitrino
@cindex semitrino, ascendente
@cindex semitrino, descendente
@cindex semitrino, doble
@cindex signo, coda
@cindex signo, coda de variación
@cindex signo, segno
@cindex signo, snappizzicato
@cindex símbolo, coda
@cindex símbolo, coda variante
@cindex símbolo, segno
@cindex trino
@cindex varcoda
@cindex @q{coda}, símbolo, variante
@cindex @q{bachschleifer}, articulación
@cindex articulation, bachschleifer

@funindex \accent
@funindex \marcato
@funindex \staccatissimo
@funindex \espressivo
@funindex \staccato
@funindex \tenuto
@funindex \portato
@funindex \upbow
@funindex \downbow
@funindex \flageolet
@funindex \thumb
@funindex \lheel
@funindex \rheel
@funindex \ltoe
@funindex \rtoe
@funindex \open
@funindex \halfopen
@funindex \stopped
@funindex \snappizzicato
@funindex \turn
@funindex \reverseturn
@funindex \slashturn
@funindex \haydnturn
@funindex \trill
@funindex \prall
@funindex \mordent
@funindex \prallprall
@funindex \prallmordent
@funindex \upprall
@funindex \downprall
@funindex \upmordent
@funindex \downmordent
@funindex \pralldown
@funindex \prallup
@funindex \lineprall
@funindex \signumcongruentiae
@funindex \veryshortfermata
@funindex \shortfermata
@funindex \fermata
@funindex \longfermata
@funindex \verylongfermata
@funindex \henzeshortfermata
@funindex \henzelongfermata
@funindex \segno
@funindex \coda
@funindex \varcoda
@funindex \bachschleifer

@funindex -

Se pueden adjuntar a las notas un amplio abanico de símbolos para
denotar articulaciones, adornos y otras indicaciones de ejecución,
utilizando la sintaxis siguiente:

@example
@var{nota}\@var{nombre}
@end example

La lista de los posibles valores de @code{@var{nombre}} está en
@ref{List of articulations}.  Por ejemplo:

@lilypond[verbatim,quote]
\relative {
  c''4\staccato c\mordent b2\turn
  c1\fermata
}
@end lilypond

@cindex @q{marcato}, articulación
@cindex articulación marcato
@cindex @q{tenuto}, articulación
@cindex articulación tenuto
@cindex @q{staccatissimo}, articulación
@cindex articulación staccatissimo
@cindex @q{accent}, articulación
@cindex articulación accent
@cindex @q{staccato}, articulación
@cindex articulación staccato
@cindex @q{portato}, articulación
@cindex articulación portato

Algunas de estas articulaciones tienen abreviaturas que facilitan
su escritura.  Las abreviaturas se escriben detrás del nombre de
la nota, y su sintaxis consiste en un guión @code{-} seguido de un
símbolo que especifica la articulación.  Existen abreviaturas
predefinidas para el @notation{marcato}, @notation{stopped} (nota
apagada), @notation{tenuto}, @notation{staccatissimo},
@notation{accent} (acento), @notation{staccato} (picado), y
@notation{portato}.  La salida correspondiente a estas
articulaciones aparece de la siguiente manera:

@lilypond[verbatim,quote]
\relative {
  c''4-^ c-+ c-- c-!
  c4-> c-. c2-_
}
@end lilypond

Las reglas para la colocación predeterminada de las articulaciones
se encuentran definidas en el archivo @file{scm/script.scm}.  Las
articulaciones y ornamentos se pueden colocar manualmente por
encima o por debajo del pentagrama; véase
@ref{Direction and placement}.

@funindex \atLeft
@funindex \atRight

@cindex bachschleifer
@cindex ornamento, horizontalmente
@cindex horizontal, ornamento

El @code{bachschleifer} se posiciona a la izquerda del objeto
@code{NoteHead}.  Este ornamento puede tener líneas adicionales.

@lilypond[verbatim,quote]
{
  \autoBeamOff
  b'8 g''\bachschleifer
  e'' c'''\bachschleifer
}
@end lilypond

También es posible posicionar articulaciones y ornamentos comunes
a la izquierda y a la derecha de una cabeza de nota
sobreescribiendo la propiedad @code{side-axis} y, si es necesario,
la propiedad @code{direction}.  Las funciones de conveniencia
@code{\atLeft} o @code{\atRight} se ocupan de esto.

@lilypond[verbatim,quote]
{
  \set fingeringOrientations = #'(left)
  \set stringNumberOrientations = #'(left down)
  <
   c'-3\5_\rightHandFinger #1 \atLeft \mordent
   g'^\rightHandFinger #2
   c''-1\2^\rightHandFinger #3 \atRight \prall
   e'' ^\rightHandFinger #4
  >2^\tenuto
}
@end lilypond

@predefined
@code{\atLeft},
@code{\atRight}.
@endpredefined

El tipo de grob que crea una articulación depende de a qué se adjunta.

@itemize @bullet
@item
Obre las notas o silencios ordinarios, las articulaciones crean objetos @code{Script}.
@item
Sobre los silencios multicompás, las articulaciones crean objetos @code{MultiMeasureRestScript}.
@item
Sobre una @code{\caesura}, las articulaciones crean objetos @code{CaesuraScript}.
@end itemize

@lilypond[verbatim,quote,fragment]
\override Score.Script.color = #(universal-color 'vermillion)
\override Score.MultiMeasureRestScript.color = #(universal-color 'blue)
\override Score.CaesuraScript.color = #(universal-color 'orange)
a'2\fermata r\fermata
R1\fermata
g'2 \caesura \fermata f'2
@end lilypond

Además de articulaciones, se pueden adjuntar textos y elementos de
marcado a las notas.  @xref{Text scripts}.

Para ver más información acerca de la ordenación de los elementos
@code{Script} y @code{TextScript} que se adjuntan a las notas, consulte
@rlearningnamed{Placement of objects, Colocación de los objetos}.

@snippets

@cindex articulación, valores predeterminados, modificación
@funindex \dashBang
@funindex \dashDash
@funindex \dashDot
@funindex \dashHat
@funindex \dashLarger
@funindex \dashPlus
@funindex \dashUnderscore
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/modifying-default-values-for-articulation-shorthand-notation.ly}

@cindex vertical, orden de las inscripciones
@cindex ordenación vertical de las inscripciones
@cindex inscripción, ordenación vertical
@funindex script-priority
@anchor{Controlling the vertical ordering of scripts}
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/controlling-the-vertical-ordering-of-scripts.ly}
@xref{Default values for script-priority}.

@cindex grupeto de retardación, ornamento
@cindex retardación, grupeto de, ornamento
@cindex ornamento, grupeto de retardación
@funindex suggestAccidentals
@funindex AccidentalSuggestion
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/creating-a-delayed-turn.ly}

@morerefs
Glosario musical:
@rglos{tenuto},
@rglos{accent},
@rglos{staccato},
@rglos{portato}.

Manual de aprendizaje:
@rlearningnamed{Placement of objects, Colocación de los objetos}.

Referencia de la notación:
@ref{Text scripts},
@ref{Direction and placement},
@ref{List of articulations},
@ref{Trills}.

Archivos instalados:
@file{scm/script.scm}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{CaesuraScript},
@rinternals{MultiMeasureRestScript},
@rinternals{Script},
@rinternals{TextScript}.
@endmorerefs


@node Dynamics
@subsection Matices dinámicos

@cindex dinámica
@cindex matices absolutos
@cindex matices
@cindex absolutos, matices

@funindex \ppppp
@funindex \pppp
@funindex \ppp
@funindex \pp
@funindex \p
@funindex \mp
@funindex \mf
@funindex \f
@funindex \ff
@funindex \fff
@funindex \ffff
@funindex \fffff
@funindex \fp
@funindex \sf
@funindex \sff
@funindex \sp
@funindex \spp
@funindex \sfz
@funindex \rfz
@funindex \n

Las marcas dinámicas de matiz absoluto se especifican usando una
instrucción después de una nota: @code{c4\ff}.  Las marcas
dinámicas disponibles son @code{\ppppp}, @code{\pppp},
@code{\ppp}, @code{\pp}, @code{\p}, @code{\mp}, @code{\mf},
@code{\f}, @code{\ff}, @code{\fff}, @code{\ffff}, @code{\fffff},
@code{\fp}, @code{\sf}, @code{\sff}, @code{\sp}, @code{\spp},
@code{\sfz}, @code{\rfz} y @code{\n}.  Las indicaciones dinámicas
se pueden colocar manualmente por encima o por debajo del
pentagrama; para ver más detalles, consulte
@ref{Direction and placement}.

@lilypond[verbatim,quote]
\relative c'' {
  c2\ppp c\mp
  c2\rfz c^\mf
  c2_\spp c^\ff
}
@end lilypond

@cindex regulador
@cindex crescendo
@cindex decrescendo
@cindex diminuendo

@funindexpost \<
@funindexpost \>
@funindexpost \!
@funindex \cr
@funindex \decr
@funindex \endcr
@funindex \enddecr

Una indicación de @notation{crescendo} se comienza con @code{\<} y
se termina con @code{\!}, con un matiz absoluto o con otra
indicación de crescendo o de decrescendo.  Una indicación de
@notation{decrescendo} comienza con @code{\>} y se termina también
con @code{\!}, con un matiz dinámico absoluto o con otra
indicación de crescendo o de decrescendo.  Se pueden usar
@code{\cr} y @code{\decr} en lugar de @code{\<} y @code{\>}.
También es posible usar @code{\endcr} y @code{\enddecr} en lugar
de @code{\!} para finalizar un crescendo o un decrescendo,
respectivamente. De forma predeterminada, se tipografían
reguladores en ángulo cuando se utiliza esta notación.

@lilypond[verbatim,quote]
\relative c'' {
  c2\< c\!
  d2\< d\f
  e2\< e\>
  f2\> f\!
  e2\> e\mp
  d2\> d\>
  c1\!
}
@end lilypond

Un regulador terminado mediante @code{\!} finaliza en el borde
derecho de la nota que lleva el @code{\!} adosado.  En el caso en
que esté terminado con el comienzo de otra indicación
@notation{crescendo} o @notation{decrescendo}, terminará en el
centro de la nota que tiene adosada la siguiente indicación
@code{\<} ó @code{\>}.  El regulador siguiente empezará entonces
en el borde derecho de la misma nota en lugar del borde izquierdo,
como sería usual si hubiese terminado con @code{\!}  previamente.
Si un regulador termina en el inicio de un compás, finalizará
sobre la línea divisoria precedente.

@lilypond[verbatim,quote]
\relative {
  c''1\< | c4 a c\< a | c4 a c\! a\< | c4 a c a\!
}
@end lilypond

Los reguladores que terminan con indicaciones dinámicas absolutas
en lugar de con @code{\!} también se tipografían de manera
parecida.  Sin embargo, la longitud de la propia indicación
dinámica puede alterar el punto en que finaliza el regulador
anterior.

@lilypond[verbatim,quote]
\relative {
  c''1\< | c4 a c\mf a | c1\< | c4 a c\ffff a
}
@end lilypond

@cindex varios matices sobre una nota
@cindex matices, varios sobre una nota
@cindex dinámica, varias indicaciones sobre una nota
@funindex \after
Con frecuencia, las marcas como @notation{crescendo} o
@notation{decrescendo} deben comenzar o terminar en el mismo
instante temporal dentro de la duración de una nota sostenida.
Esto se puede conseguir con @code{\after}, que se puede usar
también para crear articulaciones o inscripciones de texto
retrasadas:

@lilypond[verbatim,quote]
<<
  \relative {
    \after 2 \< c'1
    d4\f\> e f g
    \after 2. \pp c,1
    \after 2. \fermata e
    \after 2. ^"Fine." f
  }
  \relative {
    \repeat unfold 12 c'4
    c c c c\fermata
    c c c c
  }
>>
@end lilypond

Se pueden usar varias instancias de @code{\after} para tipografiar
varias indicaciones dinámicas sobre una sola nota.  Esto es útil
especialmente para añadir un crescendo y un decrescendo a la misma
nota:

@lilypond[verbatim,quote]
\relative {
  c''4\< d\! e\> c\!
  \after 4 \< \after 2\> \after 2. \! f1
  \textLengthOn
  \after 4 \> \after 2. ^"hush!" c1
  g4\pp
}
@end lilypond

@cindex vacío, acorde
@cindex acorde, vacío
@funindex <>
Si la primera de dicha secuencia de marcas sobre una única nota se
supone que debe coincidir con el ataque de la nota, es conveniente
adjuntarla a un acorde vacío @code{<>}.  De esta manera, todas las
marcas se pueden introducir en su orden visual natural:

@lilypond[verbatim,quote]
{
  <>\< \after 4 \> \after 2 \! c'1
  % easier to write and read than:
  \after 4 \> \after 2 \! c'1\<
}
@end lilypond

@cindex espressivo, articulación

@funindex \espressivo

También se puede usar la instrucción @code{\espressivo} para
indicar un crescendo y un decrescendo sobre la misma nota.  Sin
embargo, advierta que esta indicación está implementada como una
articulación, no como una expresión dinámica.

@lilypond[verbatim,quote]
\relative {
  c''2 b4 a
  g1\espressivo
  \after 2. \espressivo c
}
@end lilypond

@funindex \cresc
@funindex \decresc
@funindexpost \dim
Las indicaciones de crescendo textuales se inician con
@code{\cresc}.  Los decrescendos textuales se inician con
@code{\decresc} o con @code{\dim}.  Se trazan líneas extensoras
cuando es necesario.

@lilypond[verbatim,quote]
\relative {
  g'8\cresc a b c b c d e\mf |
  f8\decresc e d c e\> d c b |
  a1\dim ~ |
  a2. r4\! |
}
@end lilypond

@funindex \crescTextCresc
@funindex \dimTextDecresc
@funindex \dimTextDecr
@funindex \dimTextDim
@funindex \crescHairpin
@funindex \dimHairpin

También pueden sustituirse los reguladores gráficos
por cambios de dinámica textuales:
@lilypond[verbatim,quote]
\relative c'' {
  \crescTextCresc
  c4\< d e f\! |
  \dimTextDecresc
  g4\> e d c\! |
  \dimTextDecr
  e4\> d c b\! |
  \dimTextDim
  d4\> c b a\! |
  \crescHairpin
  \dimHairpin
  c4\< d\! e\> d\! |
}
@end lilypond


Para crear nuevas indicaciones de matiz absoluto o de texto que
deba alinearse con los matices; véase
@ref{New dynamic marks}.

@cindex matices, posición vertical
@cindex dinámica, posición vertical
@cindex vertical, posición, de las indicaciones dinámicas
@funindex DynamicLineSpanner

La colocación vertical de las indicaciones de dinámica se maneja
por parte de @rinternals{DynamicLineSpanner}.

@funindex \dynamicUp
@funindex \dynamicDown
@funindex \dynamicNeutral

Está disponible un contexto @code{Dynamics} para tipografiar las
indicaciones de matiz dinámico en su propia línea horizontal.
Utilice silencios de separación para indicar los tiempos (las
notas que están dentro de un contexto @code{Dynamics} también
ocupan tiempo musical, pero no se imprimen).  El contexto
@code{Dynamics} puede contener otros elementos como inscripciones
textuales, objetos extensores de texto e indicaciones de pedal de
piano.

@lilypond[verbatim,quote]
<<
  \new Staff \relative {
    c'2 d4 e |
    c4 e e,2 |
    g'4 a g a |
    c1 |
  }
  \new Dynamics {
    s1\< |
    s1\f |
    s2\dim s2-"rit." |
    s1\p |
  }
>>
@end lilypond

@warning{Incluso si solo hay una única indicación dinámica
absoluta como @code{@bs{}p} en toda la partitura, LilyPond siempre
crea @emph{dos} objetos para ella, un objeto @code{DynamicText} y
un objeto @code{DynamicLineSpanner}, y las propiedades para
controlar la indicación dinámica se comparten entre los dos
objetos.  Por ejepmlo, el tamaño se puede cambiar con la propiedad
@code{DynamicText.font-size}, mientras que la posición vertical se
controla por medio de @code{DynamicLineSpanner.Y-offset}.

Como consecuencia, un código como

@example
@bs{}tweak font-size 5 @bs{}p
@end example

@noindent
funciona, pero

@example
@bs{}tweak Y-offset 5 @bs{}p
@end example

@noindent
no funciona.  Tenemos de escribir

@example
@bs{}tweak DynamicLineSpanner.Y-offset 5 @bs{}p
@end example

@noindent
en su lugar.}

@predefined
@code{\dynamicUp},
@code{\dynamicDown},
@code{\dynamicNeutral},
@code{\crescTextCresc},
@code{\dimTextDim},
@code{\dimTextDecr},
@code{\dimTextDecresc},
@code{\crescHairpin},
@code{\dimHairpin}.
@endpredefined


@snippets

@cindex reguladores sobre líneas divisorias
@cindex línea divisoria, detener regulador
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/setting-hairpin-behavior-at-bar-lines.ly}

@cindex regulador, longitud mínima
@cindex longitud mínima, regulador
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/setting-the-minimum-length-of-hairpins.ly}

@cindex hairpin, aligning ends to @code{NoteColumn} directions
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/aligning-the-ends-of-hairpins-to-notecolumn-directions.ly}

@cindex regulador, desplazar extremos
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/moving-the-ends-of-hairpins.ly}

@cindex al niente, regulador
@cindex niente, al, regulador
@cindex regulador, al niente
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/printing-hairpins-using-al-niente-notation.ly}

@cindex Ferneyhough, regulador de
@cindex regulador de Ferneyhough
@cindex regulador acampanados
@cindex acampanado, regulador
@cindex regulador de tipo constante
@cindex constante, regulador de tipo

@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/printing-hairpins-in-various-styles.ly}

@cindex vertical, matices, alineación
@cindex alineación vertical, matices
@cindex matiz, alineación vertical
@cindex vertical, inscripciones, alineación
@cindex texto, alineación vertical de inscripciones de
@cindex alineación vertical de inscripciones de texto
@funindex DynamicLineSpanner
@funindex \textLengthOn
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/vertically-aligned-dynamics-and-textscripts.ly}

@cindex vertical alignment, dynamics, breaking
@cindex alignment, breaking vertical, dynamics
@cindex dynamics, breaking vertical alignment
@cindex text script, breaking vertical alignment
@cindex alignment, breaking vertical, text scripts
@cindex breaking vertical alignment of dynamics
@funindex \breakDynamicSpan
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/breaking-vertical-alignment-of-dynamics-and-textscripts.ly}

@cindex matiz, línea de extensión, ocultar
@cindex ocultar, línea de extensión de matiz
@cindex extensión, matiz, ocultar línea de
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/hiding-the-extender-line-for-text-dynamics.ly}

@cindex matiz, estilo de texto
@cindex texto, matiz de estilo de
@cindex estilo, matiz de, de texto
@funindex crescendoText
@funindex crescendoSpanner
@funindex decrescendoText
@funindex decrescendoSpanner
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/changing-text-and-spanner-styles-for-text-dynamics.ly}

@morerefs
Glosario musical:
@rglos{al niente},
@rglos{crescendo},
@rglos{decrescendo},
@rglos{hairpin}.

Manual de aprendizaje:
@rlearningnamed{Articulations and dynamics, Articulaciones y matices dinámicos}.

Referencia de la notación:
@ref{Direction and placement},
@ref{New dynamic marks},
@ref{Enhancing MIDI output},
@ref{Controlling MIDI dynamics}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{DynamicText},
@rinternals{Hairpin},
@rinternals{DynamicLineSpanner},
@rinternals{Dynamics}.
@endmorerefs


@node New dynamic marks
@subsection Indicaciones dinámicas nuevas

@cindex indicaciones dinámicas nuevas
@cindex dinámicas, indicaciones, nuevas

La manera más fácil de crear indicaciones dinámicas es usar
objetos de marcado (@code{\markup}).

@lilypond[verbatim,quote]
moltoF = \markup { molto \dynamic f }

\relative {
  <d' e>16_\moltoF <d e>
  <d e>2..
}
@end lilypond

@cindex dinámicas indicaciones editoriales
@cindex dinámicas, indicaciones entre paréntesis
@cindex editoriales, indicaciones dinámicas
@funindex \bracket
@funindex \dynamic

En el modo de marcado se pueden crear indicaciones dinámicas
editoriales (entre paréntesis o corchetes).  La sintaxis del modo
de marcado se describe en @ref{Formatting text}.

@lilypond[verbatim,quote]
roundF = \markup {
    \center-align \concat { \bold { \italic ( }
           \dynamic f \bold { \italic ) } } }
boxF = \markup { \bracket { \dynamic f } }
\relative {
  c'1_\roundF
  c1_\boxF
}
@end lilypond

@funindex make-dynamic-script

Las indicaciones dinámicas sencillas y centradas se crean
fácilmente con la función @code{make-dynamic-script}.

@lilypond[verbatim,quote]
sfzp = #(make-dynamic-script "sfzp")
\relative {
  c'4 c c\sfzp c
}
@end lilypond

En general @code{make-dynamic-script} toma cualquier objeto de
marcado como argumento.  La fuente tipográfica de matices solo
contiene los caracteres @code{f}, @code{m}, @code{p}, @code{r},
@code{s}, @code{z} y @code{n}; por lo que si se desea obtener una
indicación dinámica que incluya texto normal o signos de
puntuación, es necesario utilizar instrucciones de marcado que
devuelvan los ajustes de la familia de fuente tipográfica y su
codificación a las del texto normal, por ejemplo
@code{\normal-text}.  El uso de @code{make-dynamic-script} en
lugar de un elemento de marcado corriente asegura la alineación
vertical de los objetos de marcado y reguladores que se aplican a
la misma cabeza de nota.

@lilypond[verbatim,quote]
roundF = \markup { \center-align \concat {
           \normal-text { \bold { \italic ( } }
           \dynamic f
           \normal-text { \bold { \italic ) } } } }
boxF = \markup { \bracket { \dynamic f } }
mfEspress = \markup { \center-align \line {
              \hspace #3.7 mf \normal-text \italic espress. } }
roundFdynamic = #(make-dynamic-script roundF)
boxFdynamic = #(make-dynamic-script boxF)
mfEspressDynamic = #(make-dynamic-script mfEspress)
\relative {
  c'4_\roundFdynamic\< d e f
  g,1~_\boxFdynamic\>
  g1
  g'1~\mfEspressDynamic
  g1
}
@end lilypond

Se puede utilizar en su lugar la forma Scheme del modo de marcado.
Su sintaxis se explica en
@rextendnamed{Markup construction in Scheme, Construcción de elementos de marcado en Scheme}.

@lilypond[verbatim,quote]
moltoF = #(make-dynamic-script
            (markup #:normal-text "molto"
                    #:dynamic "f"))
\relative {
  <d' e>16 <d e>
  <d e>2..\moltoF
}
@end lilypond

Para alinear el texto del matiz dinámico a la izquierda en lugar
de centrarlo sobre una nota, utilice un @code{\tweak}:

@lilypond[verbatim,quote]
moltoF = \tweak DynamicText.self-alignment-X #LEFT
         #(make-dynamic-script
            (markup #:normal-text "molto"
                    #:dynamic "f"))
\relative {
  <d' e>16 <d e>
  <d e>2..\moltoF <d e>1
}
@end lilypond

Los ajustes para las fuentes tipográficas en el modo de marcado se
describen en @ref{Selecting font and font size}.

@morerefs
Referencia de la notación:
@ref{Formatting text},
@ref{Selecting font and font size},
@ref{Enhancing MIDI output},
@ref{Controlling MIDI dynamics}.

Extender LilyPond:
@rextendnamed{Markup construction in Scheme, Construcción de elementos de marcado en Scheme}.

Fragmentos de código:
@rlsr{Expressive marks}.
@endmorerefs


@node Expressive marks as curves
@section Expresiones como curvas

Esta sección explica cómo crear varias marcas expresivas de forma
curva: ligaduras de expresión y de fraseo, respiraciones, caídas y
elevaciones de tono.


@node Slurs
@subsection Ligaduras de expresión

@cindex ligadura de expresión

@funindex (
@funindex )
Las @notation{Ligaduras de expresión} se introducen utilizando
paréntesis:

@warning{En música polifónica, las ligaduras de expresión deben
terminar en la misma voz en la que empiezan.}

@lilypond[verbatim,quote]
\relative {
  f''4( g a) a8 b(
  a4 g2 f4)
  <c e>2( <b d>2)
}
@end lilypond

@cindex ligadura de expresión, posicionamiento manual
@cindex ligadura de expresión, debajo de las notas
@cindex ligadura de expresión, encima de las notas
@funindex \slurDown
@funindex \slurNeutral

Las ligaduras de expresión se pueden colocar manualmente por
encima o por debajo de las notas; véase
@ref{Direction and placement}.

@cindex fraseo, ligadura de
@cindex varias ligaduras de expresión
@cindex simultáneas, ligaduras de expresión
@cindex ligadura de fraseo
@cindex ligadura de expresión, varias
@cindex ligadura de expresión, simultáneas

@c some entries for '\=' are auto-generated; don't use @funindexpost
@funindex \=

Debe tenerse cuidado con las ligaduras de expresión simultáneas o
superpuestas.  En casi todos los casos, las ligaduras de expresión
externas indican, ciertamente, fraseo, y las ligaduras de fraseo
pueden superponerse a las ligaduras de expresión normales, véase
@ref{Phrasing slurs}.  Cuando se necesitan varias ligaduras
de expresión normales dentro de una sola voz, los comienzos y
finales correspondientes de las ligaduras deben etiquetarse
precediéndolos por @code{\=} seguido de una clave identificativa
(un símbolo o un entero no negativo).

@lilypond[verbatim,quote]
\fixed c' {
  <c~ f\=1( g\=2( >2 <c e\=1) a\=2) >
}
@end lilypond

@cindex ligadura de expresión, estilo
@cindex ligadura continua
@cindex ligadura de puntos
@cindex ligadura discontinua
@cindex continua, ligadura
@cindex discontinua, ligadura
@cindex puntos, ligadura de
@cindex estilo de la ligadura

@funindex \slurDashed
@funindex \slurDotted
@funindex \slurSolid

Las ligaduras de expresión pueden ser continuas, discontinuas o de
puntos.  El estilo predeterminado de las ligaduras de expresión es
el continuo:

@lilypond[verbatim,quote]
\relative {
  c'4( e g2)
  \slurDashed
  g4( e c2)
  \slurDotted
  c4( e g2)
  \slurSolid
  g4( e c2)
}
@end lilypond

@funindex \slurHalfDashed
@funindex \slurHalfSolid
@cindex ligadura de expresión, mitad continua y mitad discontinua

También se puede hacer que las ligaduras de expresión sean
semi-discontinuas (la primera mitad discontinua y la segunda mitad
continua) o semi-continuas (la primera mitad continua y la segunda
discontinua):

@lilypond[verbatim,quote]
\relative {
  c'4( e g2)
  \slurHalfDashed
  g4( e c2)
  \slurHalfSolid
  c4( e g2)
  \slurSolid
  g4( e c2)
}
@end lilypond

@funindex \slurDashPattern
@cindex ligadura de expresión, definir patrones de discontinuidad
@cindex patrón de discontinuidad, ligadura de expresión

Se pueden definir patrones de discontinuidad para las ligaduras de
expresión:

@lilypond[verbatim,quote]
\relative {
  c'4( e g2)
  \slurDashPattern 0.7 0.75
  g4( e c2)
  \slurDashPattern 0.5 2.0
  c4( e g2)
  \slurSolid
  g4( e c2)
}
@end lilypond

@predefined
@funindex \slurUp

@code{\slurUp},
@code{\slurDown},
@code{\slurNeutral},
@code{\slurDashed},
@code{\slurDotted},
@code{\slurHalfDashed},
@code{\slurHalfSolid},
@code{\slurDashPattern},
@code{\slurSolid}.
@endpredefined


@snippets

@cindex slur, adjusting start and end
@cindex adjusting start and end, slur
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/adjusting-slur-positions-vertically.ly}

@cindex ligadura de expresión, doble, para acordes legato
@cindex doble ligadura de expresión para acordes legato
@findex doubleSlurs
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/using-double-slurs-for-legato-chords.ly}

@cindex marcado, texto, dentro de las ligaduras
@cindex texto, marcado de, dentro de las ligaduras
@cindex ligadura de expresión, marcado de texto por dentro
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/positioning-text-markups-inside-slurs.ly}

@cindex ligadura de expresión, definición del patrón de discontinuidad
@cindex discontinuidad, definir patrón de, ligadura de expresión
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/making-slurs-with-complex-dash-structure.ly}

@morerefs
Glosario musical:
@rglos{slur}.

Manual de aprendizaje:
@rlearningnamed{On the un-nestedness of brackets and ties, Acerca de la no anidabilidad de llaves y ligaduras}.

Referencia de la notación:
@ref{Direction and placement},
@ref{Phrasing slurs}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{Slur}.
@endmorerefs


@node Phrasing slurs
@subsection Ligaduras de fraseo

@cindex ligadura de fraseo
@cindex marca de fraseo
@cindex fraseo, ligadura de
@cindex fraseo, marca de
@funindexpost \(
@funindexpost \)

Las @notation{ligaduras de fraseo} (o marcas de fraseo) que
indican una frase musical se escriben usando las instrucciones
@code{\(} y @code{\)} respectivamente:

@lilypond[verbatim,quote]
\relative {
  c''4\( d( e) f(
  e2) d\)
}
@end lilypond

@funindex \phrasingSlurUp
@funindex \phrasingSlurDown
@funindex \phrasingSlurNeutral

Tipográficamente, la ligadura de fraseo se comporta casi
exactamente igual que una ligadura de expresión normal.  Sin
embargo, se tratan como objetos diferentes.  Una @code{\slurUp} no
tendrá ningún efecto sobre una ligadura de fraseo.  El fraseo se
puede situar manualmente por encima o por debajo de las notas;
véase @ref{Direction and placement}.

@cindex simultáneas, ligaduras de fraseo
@cindex varias ligaduras de fraseo
@cindex ligadura de fraseo, simultáneas
@cindex ligaduras de fraseo, varias
@cindex fraseo, ligadura de, simultáneas
@cindex fraseo, ligadura de, varias

Las ligaduras de fraseo simultáneas o superpuestas se introducen
usando @code{\=} igual que se hace con las ligaduras de expresión
normales, véase @ref{Slurs}.

@funindex \phrasingSlurDashed
@funindex \phrasingSlurDotted
@funindex \phrasingSlurSolid
@cindex fraseo, ligaduras de, discontinuas
@cindex discontinuas, ligaduras de fraseo
@cindex fraseo, ligaduras de, punteadas
@cindex punteada, ligadura de fraseo
@cindex ligadura de fraseo discontinua
@cindex ligadura de fraseo punteada

Las ligaduras de fraseo pueden ser continuas, de puntos o de
rayas.  El estilo predeterminado para las ligaduras de fraseo es
el continuo:

@lilypond[verbatim,quote]
\relative {
  c'4\( e g2\)
  \phrasingSlurDashed
  g4\( e c2\)
  \phrasingSlurDotted
  c4\( e g2\)
  \phrasingSlurSolid
  g4\( e c2\)
}
@end lilypond

@funindex \phrasingSlurHalfDashed
@funindex \phrasingSlurHalfSolid
@cindex fraseo, ligadura de, mitad continua y mitad discontinua
@cindex ligadura de fraseo mitad continua y mitad discontinua

Se puede hacer también que las ligaduras de fraseo sean
semi-discontinuas (la primera mitad discontinua y la segunda mitad
continua) o semi-continuas (la primera mitad continua y la segunda
mitad discontinua):

@lilypond[verbatim,quote]
\relative {
  c'4\( e g2\)
  \phrasingSlurHalfDashed
  g4\( e c2\)
  \phrasingSlurHalfSolid
  c4\( e g2\)
  \phrasingSlurSolid
  g4\( e c2\)
}
@end lilypond

@funindex \phrasingSlurDashPattern
@cindex fraseo, ligadura de, definir patrones de discontinuidad
@cindex ligadura de fraseo, definir patrones de discontinuidad


Se pueden definir patrones de discontinuidad para las ligaduras de
fraseo:

@lilypond[verbatim,quote]
\relative {
  c'4\( e g2\)
  \phrasingSlurDashPattern 0.7 0.75
  g4\( e c2\)
  \phrasingSlurDashPattern 0.5 2.0
  c4\( e g2\)
  \phrasingSlurSolid
  g4\( e c2\)
}
@end lilypond

Las definiciones de patrones de discontinuidad tienen la misma
estructura que las definiciones de patrones de discontinuidad de
las ligaduras de expresión.  Para ver más información acerca de
patrones de discontinuidad complejos, consulte los fragmentos de
código bajo @ref{Slurs}.

@predefined
@code{\phrasingSlurUp},
@code{\phrasingSlurDown},
@code{\phrasingSlurNeutral},
@code{\phrasingSlurDashed},
@code{\phrasingSlurDotted},
@code{\phrasingSlurHalfDashed},
@code{\phrasingSlurHalfSolid},
@code{\phrasingSlurDashPattern},
@code{\phrasingSlurSolid}.
@endpredefined

@morerefs
Manual de aprendizaje:
@rlearningnamed{On the un-nestedness of brackets and ties, Acerca de la no anidabilidad de llaves y ligaduras}.

Referencia de la notación:
@ref{Direction and placement},
@ref{Slurs}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{PhrasingSlur}.
@endmorerefs


@node Breath marks
@subsection Marcas de respiración

@cindex respiraciones
@cindex pausa, marcas de
@funindex \breathe

Las respiraciones (acortando la nota anterior para tomar aire) se
introducen utilizando @code{\breathe}:

@lilypond[verbatim,quote]
\fixed c'' { c2. \breathe d4 }
@end lilypond

@noindent
Para un corte breve del sonido que no se extrae de la nota
anterior, @pxref{Caesuras}.

A diferencia de otras marcas de expresión, los símbolos de
respiración no están asociados con la nota anterior, sino que son
eventos independientes.  Por ello, todas las marcas de expresión
que están adjuntas a la nota anterior, cualquier corchete recto
que indique barrado manual, y cualquier paréntesis que indique
ligaduras de expresión y de fraseo, deben escribirse antes de
@code{\breathe}.  La propia @code{\breathe} no acepta
articulaciones, pero @pxref{Caesuras}.

Las marcas de respiración dan por terminadas las barras
automáticas; para sobreescribir este comportamiento,
@pxref{Manual beams}.

@lilypond[verbatim,quote]
\fixed c'' { c8 \breathe d e f g2 }
@end lilypond

@cindex respiración, cambiar símbolo de  marca de
@cindex modificar símbolo de marca de respiración
@cindex check mark
@cindex símbolo, cambiar, marca de respiración
@cindex marca de pulso

La propiedad de contexto @code{breathMarkType} controla cuál de
las varias indicaciones de respiración predefinidas crea la
instrucción @code{\breathe}.  @xref{List of breath marks}.

@lilypond[verbatim,quote]
\fixed c'' {
  \set breathMarkType = #'tickmark
  c2. \breathe d4
}
@end lilypond


@morerefs
Glosario musical:
@rglos{caesura}.

Referencia de la notación:
@ref{Caesuras},
@ref{Divisiones}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{BreathingEvent},
@rinternals{BreathingSign},
@rinternals{Breathing_sign_engraver}.
@endmorerefs


@node Falls and doits
@subsection Caídas y elevaciones

@cindex fall (caída de tono)
@cindex doit (elevación de tono)
@cindex caída de tono (fall)
@cindex elevación de tono (doit)
@funindex \bendAfter

Se pueden expresar @notation{caídas} y @notation{subidas} de tono
(falls y doits) añadidas a las notas mediante la instrucción
@code{\bendAfter}. La dirección de la caída o elevación se indica
con un signo más o menos (arriba o abajo).  El número indica el
intervalo de alturas sobre el que se extiende la caída o elevación
@emph{partiendo de} la nota principal.

@lilypond[verbatim,quote]
\relative c'' {
  c2\bendAfter 4
  c2\bendAfter -4
  c2\bendAfter 6.5
  c2\bendAfter -6.5
  c2\bendAfter 8
  c2\bendAfter -8
}
@end lilypond

@snippets

@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/adjusting-the-shape-of-falls-and-doits.ly}

@morerefs
Glosario musical:
@rglos{fall},
@rglos{doit}.

Fragmentos de código:
@rlsr{Expressive marks}.
@endmorerefs


@node Expressive marks as lines
@section Expresiones como líneas

Esta sección explica cómo crear diversas marcas de expresión que
siguen un camino lineal: glissandi, arpegios y trinos.


@node Glissando
@subsection Glissando

@cindex glissando
@funindex \glissando

Se crea un @notation{glissando} añadiendo @code{\glissando}
después de la nota:

@lilypond[verbatim,quote]
\relative {
  g'2\glissando g'
  c2\glissando c,
  \afterGrace f,1\glissando f'16
}
@end lilypond

Un glissando puede conectar notas de un pentagrama a otro:

@lilypond[verbatim,quote]
\new PianoStaff <<
  \new Staff = "right" {
    e'''2\glissando
    \change Staff = "left"
    a,,4\glissando
    \change Staff = "right"
    b''8 r |
  }
  \new Staff = "left" {
    \clef bass
    s1
  }
>>
@end lilypond

@funindex \glissandoMap

Un glissando puede conectar las notas dentro de un acorde.  Si se
necesita hacer algo que no sea una conexión de una nota con otra
entre los dos acordes, las conexiones entre las notas se definen
estableciendo @code{\glissandoMap} a una lista de Scheme.  Los
elementos son pares de números enteros; cada par @var{(x . y)}
crea una línea de glissando desde la nota @var{x}-ésima del primer
acorde hasta la nota @var{y}-ésima del segundo acorde.  Las notas
se numeran desde cero en el orden en que aparecen en el archivo
@file{.ly} de entrada.  No todas las notas necesitan formar parte
de un glissando.

@lilypond[verbatim,quote]
\relative {
  <c' e>2\glissando g'
  <c, e>\glissando <g' b>
  \break
  \set glissandoMap = #'((0 . 1) (1 . 0))
  <c, g'>\glissando <d a'>
  \set glissandoMap = #'((0 . 0) (0 . 1) (0 . 2))
  c\glissando <d f a>
  \set glissandoMap = #'((2 . 2) (0 . 0))
  <f d a'>\glissando <c f c'>
}
@end lilypond

Se pueden crear distintos tipos de glissando.  Para ver más
detalles, consulte @ref{Line styles}.

@snippets

@cindex contemporáneo, glissando
@cindex glissando contemporáneo
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/contemporary-glissando.ly}

@cindex tiempo, marca de, para glissando
@cindex glissando, marca de tiempo
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/adding-timing-marks-to-long-glissandi.ly}

@anchor{Making glissandi breakable}
@cindex divisible, glissando
@cindex glissando, divisible
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/making-glissandi-breakable.ly}

@anchor{Extending glissandi across repeats}
@cindex glissando, a través de repetición
@cindex repetición, y glissandos
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/extending-glissandi-across-repeats.ly}

@morerefs
Glosario musical:
@rglos{glissando}.

Referencia de la notación:
@ref{Line styles}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{Glissando}.
@endmorerefs

@knownissues
La impresión de texto sobre la línea (como @notation{gliss.})@: no
está contemplada.


@node Arpeggio
@subsection Arpegio

@cindex arpegio
@cindex acorde quebrado
@cindex acorde arpegiado
@cindex quebrado, acorde
@funindex \arpeggio
@funindex \arpeggioArrowUp
@funindex \arpeggioArrowDown
@funindex \arpeggioNormal
@funindex arpeggio-direction

Un signo de @notation{acorde arpegiado} (conocido también como
acorde quebrado) sobre un acorde, se denota adjuntando
@code{\arpeggio} al acorde:

@lilypond[verbatim,quote]
\relative { <c' e g c>1\arpeggio }
@end lilypond

Se pueden escribir distintos tipos de acordes arpegiados.
@code{\arpeggioNormal} produce la vuelta al arpegio normal:

@lilypond[verbatim,quote]
\relative {
  <c' e g c>2\arpeggio

  \arpeggioArrowUp
  <c e g c>2\arpeggio

  \arpeggioArrowDown
  <c e g c>2\arpeggio

  \arpeggioNormal
  <c e g c>2\arpeggio
}
@end lilypond

Estas instrucciones predefinidas modifican internamente la
propiedad @code{arpeggio-direction}; véanse sus definiciones
completas en el archivo @file{ly/property-init.ly}.

@cindex arpegiado, acorde, símbolos especiales
@cindex especial, símbolos de arpegio

@funindex \arpeggioBracket
@funindex \arpeggioParenthesis
@funindex \arpeggioParenthesisDashed

Se pueden crear símbolos especiales de arpegio @emph{con corchete}:

@lilypond[verbatim,quote]
\relative {
  <c' e g c>2

  \arpeggioBracket
  <c e g c>2\arpeggio

  \arpeggioParenthesis
  <c e g c>2\arpeggio

  \arpeggioParenthesisDashed
  <c e g c>2\arpeggio

  \arpeggioNormal
  <c e g c>2\arpeggio
}
@end lilypond

Estas instrucciones predefinidas sobreescriben internamente la
propiedad @code{stencil} del objeto @code{Arpeggio}, y puede
también adaptar su @code{X-extent} (esto es, la dimensión
horizontal que le supone no colisionar con otros objetos).

Las propiedades de discontinuidad del paréntesis del arpegio se
controlan mediante la propiedad @code{dash-definition} (@pxref{Slurs}).

Los acordes arpegiados se pueden desarrollar explícitamente
utilizando @notation{ligaduras de unión}. Para más información, @pxref{Ties}.


@predefined
@code{\arpeggio},
@code{\arpeggioArrowUp},
@code{\arpeggioArrowDown},
@code{\arpeggioNormal},
@code{\arpeggioBracket},
@code{\arpeggioParenthesis},
@code{\arpeggioParenthesisDashed}.
@endpredefined


@snippets

@cindex arpegio, entre pautas
@cindex pautas, arpegio entre
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/creating-cross-staff-arpeggios-in-a-piano-staff.ly}

@cindex arpegio, entre voces
@cindex voces, arpegio entre
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/creating-arpeggios-across-notes-in-different-voices.ly}

@morerefs
Glosario musical:
@rglos{arpeggio}.

Referencia de la notación:
@ref{Slurs},
@ref{Ties}.

Archivos instalados:
@file{ly/property-init.ly}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{Arpeggio},
@rinternals{Slur},
@rinternals{PianoStaff}.
@endmorerefs

@knownissues
Las instrucciones predefinidas como @code{\arpeggioArrowUp}
solamente se aplican al contexto en curso, y por ello no afectan a
los arpegios que abarcan varias voces o pentagramas.  En tales
casos, estas instrucciones requieren utilizarse en un bloque
@code{\context} dentro de @code{\layout}, o en un bloque
@code{\with}, como se explica en
@ref{Changing context default settings}.  De manera alternativa,
en lugar de usar las abreviaturas predefinidas, se recomienda
sebreescribir directamente las propiedades adecuadas para el
objeto @code{Arpeggio} dentro del contexto correspondiente; por
ejemplo:

@example
\override Staff.Arpeggio.stencil = #ly:arpeggio::brew-chord-bracket
@end example

@noindent
para imprimir corchetes de arpegio que comprenden más de una voz
en el nivel de @code{Staff}, o bien

@example
\override PianoStaff.Arpeggio.arpeggio-direction = #UP
@end example

@noindent
para imprimir arpegios con punta de flecha (hacia arriba) que
comprendan más de un pentagrama dentro de un contexto
@code{PianoStaff}.

@cindex pentagrama cruzado, arpegios con paréntesis
@cindex arpegio con paréntesis de pentagrama cruzado

No es posible mezclar arpegios conectados y no conectados en un
@code{PianoStaff} en el mismo instante de tiempo.

La forma sencilla de especificar el corchete en los arpegios de
paréntesis no funciona para los arpegios de pentagrama cruzado;
@pxref{Cross-staff stems,, Plicas de pentagrama cruzado}.


@node Trills
@subsection Trinos

@cindex trino
@funindex \trill
@funindex \startTrillSpan
@funindex \stopTrillSpan

Los trinos cortos sin línea extensora se imprimen con
@code{\trill}; véase @ref{Articulations and ornamentations}.

Los @notation{trinos} largos mantenidos, con línea de extensión, se
hacen con @code{\startTrillSpan} y @code{\stopTrillSpan}:

@lilypond[verbatim,quote]
\relative {
  d''1\startTrillSpan
  d1
  c2\stopTrillSpan
  r2
}
@end lilypond

Un trino extendido que atraviesa un salto de línea recomienza
exactamente encima de la primera nota de la nueva línea.

@lilypond[ragged-right,verbatim,quote]
\relative {
  d''1\startTrillSpan
  \break
  d1
  c2\stopTrillSpan
  r2
}
@end lilypond

Los trinos extendidos consecutivos funcionan sin necesidad de
instrucciones @code{\stopTrillSpan} explícitas, porque cada trino
se convertirá automáticamente en el borde derecho del trino
anterior.

@lilypond[verbatim,quote]
\relative {
  d''1\startTrillSpan
  d1
  b1\startTrillSpan
  d2\stopTrillSpan
  r2
}
@end lilypond

También se pueden combinar los trinos con notas de adorno.
La sintaxis de esta construcción y el método para colocar
las notas de adorno con precisión están descritos en
@ref{Grace notes}.

@lilypond[verbatim,quote]
\relative {
  d''1~\afterGrace
  d1\startTrillSpan { c32[ d]\stopTrillSpan }
  c2 r2
}
@end lilypond

@cindex trinos de nota explícita
@cindex explícita, trinos de nota
@funindex \pitchedTrill

Los trinos que se tienen que ejecutar sobre notas auxiliares
explícitas se pueden tipografiar con la instrucción
@code{pitchedTrill}.  El primer argumento es la nota principal, y
el segundo es la nota @emph{trinada}, que se imprime como una
cabeza de nota, sin plica y entre paréntesis.

@lilypond[verbatim,quote]
\relative {
  \pitchedTrill
  d''2\startTrillSpan fis
  d2
  c2\stopTrillSpan
  r2
}
@end lilypond

@cindex trino con nota y alteración
@cindex alteración, trino con

La alteración del primer trino con altura definida
dentro de un compás siempre se imprime, incluso si es un becuadro.

@lilypond[verbatim,quote,relative]
{
  \key d \major
  \pitchedTrill
  d'2\startTrillSpan cis d\stopTrillSpan 
  \pitchedTrill
  d2\startTrillSpan c d\stopTrillSpan
  \pitchedTrill
  d2\startTrillSpan e d\stopTrillSpan
}
@end lilypond

@noindent
Es necesario añadir manualmente las alteraciones subsiguientes (de
la misma nota dentro del mismo compás).

@lilypond[verbatim,quote]
\relative {
  \pitchedTrill
  eis''4\startTrillSpan fis
  eis4\stopTrillSpan
  \pitchedTrill
  eis4\startTrillSpan cis
  eis4\stopTrillSpan
  \pitchedTrill
  eis4\startTrillSpan fis
  eis4\stopTrillSpan
  \pitchedTrill
  eis4\startTrillSpan fis!
  eis4\stopTrillSpan
}
@end lilypond


@predefined
@code{\startTrillSpan},
@code{\stopTrillSpan}.
@endpredefined

@morerefs
Glosario musical:
@rglos{trill}.

Referencia de la notación:
@ref{Articulations and ornamentations},
@ref{Grace notes}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{TrillSpanner},
@rinternals{TrillPitchHead},
@rinternals{TrillPitchAccidental},
@rinternals{TrillPitchParentheses},
@rinternals{TrillPitchGroup},
@rinternals{Pitched_trill_engraver}.
@endmorerefs
